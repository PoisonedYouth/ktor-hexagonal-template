[versions]
arrowStackVersion = "1.2.1"
assertJVersion = "3.24.2"
coroutinesTestVersion = "1.7.3"
cucumberVersion = "7.15.0"
detektVersion = "1.23.4"
exposedVersion = "0.45.0"
flywayVersion = "10.4.1"
hikariVersion = "5.1.0"
jacksonVersion = "2.16.1"
# keep
javaVersion = "17"
junitVersion = "5.10.1"
konsistVersion = "0.13.0"
koinVersion = "3.5.3"
kotestArrowAssertionsVersion = "1.4.0"
kotestVersion = "5.8.0"
kotlinVersion = "1.9.21"
ktfmtVersion = "0.16.0"
ktorVersion = "2.3.7"
logbackVersion = "1.4.14"
mockitoKotlinVersion = "5.2.1"
pitestJunit5Version = "1.2.0"
pitestVersion = "1.15.0"
postgresConnectorVersion = "42.7.1"
testcontainersVersion = "1.19.3"
versionCatalogUpdateVersion = "0.8.3"
versionUpdateVersion = "0.50.0"

[libraries]
arrowCore = { module = "io.arrow-kt:arrow-core" }
arrowStack = { module = "io.arrow-kt:arrow-stack", version.ref = "arrowStackVersion" }
assertJ = { module = "org.assertj:assertj-core", version.ref = "assertJVersion" }
coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test-jvm", version.ref = "coroutinesTestVersion" }
cucumberCore = { module = "io.cucumber:cucumber-bom", version.ref = "cucumberVersion" }
cucumberJava = { module = "io.cucumber:cucumber-java" }
cucumberPlatformEngine = { module = "io.cucumber:cucumber-junit-platform-engine" }
exposedJavaTime = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposedVersion" }
exposedCore = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposedVersion" }
exposedJdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposedVersion" }
flyway = { module = "org.flywaydb:flyway-core", version.ref = "flywayVersion" }
flywayPostgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flywayVersion" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikariVersion" }
jacksonJavaDateTime = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jacksonVersion" }
junitJupiterApi = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junitVersion" }
junitJupiterEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junitVersion" }
junitPlatformSuite = { module = "org.junit.platform:junit-platform-suite" }
konsist = { module = "com.lemonappdev:konsist", version.ref = "konsistVersion" }
koinKtor = { module = "io.insert-koin:koin-ktor", version.ref = "koinVersion" }
koinKtorLogger = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koinVersion" }
koinTest = { module = "io.insert-koin:koin-test", version.ref = "koinVersion" }
koinJunit5 = { module = "io.insert-koin:koin-test-junit5", version.ref = "koinVersion" }
ktorClientContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorVersion" }
ktorClientAuth = { module = "io.ktor:ktor-client-auth", version.ref = "ktorVersion" }
kotest = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotestVersion" }
kotestArrowAssertions = { module = "io.kotest.extensions:kotest-assertions-arrow", version.ref = "kotestArrowAssertionsVersion" }
# @keep - Used for convention plugins
kotlinJvmLib = { module = "org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin", version.ref = "kotlinVersion" }
kotlinMockito = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlinVersion" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlinVersion" }
ktorCIOEngine = { module = "io.ktor:ktor-server-cio", version.ref = "ktorVersion" }
ktorContentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktorVersion" }
ktorJackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktorVersion" }
ktorOpenApi = { module = "io.ktor:ktor-server-openapi", version.ref = "ktorVersion" }
ktorServerCore = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktorVersion" }
ktorStatusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktorVersion" }
ktorServerAuth = { module = "io.ktor:ktor-server-auth", version.ref = "ktorVersion" }
ktorSwagger = { module = "io.ktor:ktor-server-swagger", version.ref = "ktorVersion" }
ktorTest = { module = "io.ktor:ktor-server-test-host", version.ref = "ktorVersion" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logbackVersion" }
pitestJunit5 = { module = "org.pitest:pitest-junit5-plugin", version.ref = "pitestJunit5Version" }
pitestPluginLib = { module = "info.solidsoft.pitest:info.solidsoft.pitest.gradle.plugin", version.ref = "pitestVersion" }
postgresqlConnector = { module = "org.postgresql:postgresql", version.ref = "postgresConnectorVersion" }
testContainersCore = { module = "org.testcontainers:testcontainers", version.ref = "testcontainersVersion" }
testContainersJunitJupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainersVersion" }
testContainersPostgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainersVersion" }

[bundles]

[plugins]
catalogUpdate = { id = "nl.littlerobots.version-catalog-update", version.ref = "versionCatalogUpdateVersion" }
detektPlugin = { id = "io.gitlab.arturbosch.detekt", version.ref = "detektVersion" }
flyway = { id = "org.flywaydb.flyway", version.ref = "flywayVersion" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinVersion" }
ktfmtPlugin = { id = "com.ncorti.ktfmt.gradle", version.ref = "ktfmtVersion" }
ktor = { id = "io.ktor.plugin", version.ref = "ktorVersion" }
pitestPlugin = { id = "info.solidsoft.pitest", version.ref = "pitestVersion" }
versionUpdate = { id = "com.github.ben-manes.versions", version.ref = "versionUpdateVersion" }
